# Pipeline name
name: Create StreamingMonitor Unlocked Package Version

trigger:
    - master

variables:
    UAT_SFDX_URL: 'force://PlatformCLI::5Aep861fNsYAqFS2IVKU4L2ZnJ2ErA4OPjUIC5.uofHEc7YuMpkR5wxaGsMKrZfaT4lCo7CrJY82O74vXLRhWzN@young-life--uat.sandbox.my.salesforce.com' # Set in pipeline variables
    group: PackageDev

jobs:
    - job: CreatePackageVersion
      displayName: 'Create Salesforce Package Version'
      pool:
          vmImage: 'ubuntu-latest'

      # Salesforce publishes Docker container images for Salesforce CLI on Docker Hub
      # refer to https://developer.salesforce.com/docs/atlas.en-us.sfdx_setup.meta/sfdx_setup/sfdx_setup_docker.htm
      container: salesforce/cli:latest-slim
      steps:
          - checkout: self
            fetchTags: true
            clean: true
            persistCredentials: true

          - script: echo "$(DEVHUB_SFDX_AUTH_URL)" > DEVHUB_SFDX_URL.txt
            displayName: 'Populate auth file with DEVHUB_SFDX_URL secret'

          - script: sf org login sfdx-url -f DEVHUB_SFDX_URL.txt -a $(DEVHUB_ALIAS) -d
            displayName: 'Authenticate Dev Hub'

          #          - script: |
          #                package_result=$(sf package version create --package 'yl-smon' --wait 10 -v "$DEVHUB_ALIAS" --installation-key-bypass --code-coverage --json)
          #                package_version_id=$(echo "$package_result" | jq -r '.result.SubscriberPackageVersionId')
          #                echo "##vso[task.setvariable variable=PACKAGE_VERSION_ID]$package_version_id"
          #            displayName: 'Create Package Version and Set Variable'

          - script: echo "$(PACKAGE_VERSION_ID)"
            displayName: 'echo PACKAGE_VERSION_ID for debug'

          - script: |
                git config user.email "kknapp@younglife.org"
                git config user.name "kknapp"
                git switch --track origin/$(Build.SourceBranch)              
                git add sfdx-project.json
                git commit -m "Update version id in project.json"
                git push origin
            displayName: 'Commit updated version id and push'
#    - script: echo "$(UAT_SFDX_URL)" > UAT_SFDX_URL.txt
#      displayName: 'Populate auth file with DEVHUB_SFDX_URL secret'
#
#    - script: sf org login sfdx-url -f UAT_SFDX_URL.txt -a UAT -d
#      displayName: 'Authenticate UAT'

#    # Step 5: Install the package in UAT
#    - script: |
#        sf package install --package "$(PACKAGE_VERSION_ID)" --target-org UAT --apex-compile package --publish-wait 10 -w 10
#      displayName: 'Install Package in UAT'

